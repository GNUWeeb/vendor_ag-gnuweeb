From d9d92ba9d1714be0424407c9dd6c5836b6755983 Mon Sep 17 00:00:00 2001
From: Priyanka Gujjula <pgujjula@codeaurora.org>
Date: Mon, 25 Mar 2019 21:11:18 +0530
Subject: [PATCH 1/3] libstagefright: Fix memory leak due to lock timeout

Memory leak has occurred when freeBuffer tries to
acquire the lock which is acquired by freeNode and
not released. Due to lock timeout in freeBuffer,
buffers are never released.

CRs-Fixed: 2423296

Change-Id: I468a562a2d1c76ffc0e666c120a5bbbedece48d7
---
 media/libstagefright/omx/OMXNodeInstance.cpp | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/media/libstagefright/omx/OMXNodeInstance.cpp b/media/libstagefright/omx/OMXNodeInstance.cpp
index b3534547a3..81d393683a 100644
--- a/media/libstagefright/omx/OMXNodeInstance.cpp
+++ b/media/libstagefright/omx/OMXNodeInstance.cpp
@@ -504,11 +504,12 @@ status_t OMXNodeInstance::freeNode() {
             break;
     }
 
-    Mutex::Autolock _l(mLock);
-
     if (mActiveBuffers.size() > 0) {
         freeActiveBuffers();
     }
+
+    Mutex::Autolock _l(mLock);
+
     status_t err = mOwner->freeNode(this);
 
     mDispatcher.clear();
-- 
2.17.1

