From 5d904beac34966e7d39d2db3a92e26f3f95168c7 Mon Sep 17 00:00:00 2001
From: saranya <saranya.gopal@intel.com>
Date: Tue, 17 Apr 2018 15:52:08 +0530
Subject: [PATCH] GlobalActions: Handle 'sleep' action

Some Intel platforms do not provide separate
events for power key press and release. This
makes it impossible to detect long press of
power button. So, the solution is to handle
only short press and add 'sleep' also as an
option in GlobalActions menu. This patch
handles 'sleep' option.

Change-Id: Iaae59b324e5ba6eaed9e507fdaa8e5006535716c
Tracked-On: OAM-56502
Signed-off-by: saranya <saranya.gopal@intel.com>
Signed-off-by: Madhusudhan S <madhusudhan.s@intel.com>

Conflicts:
	packages/SystemUI/src/com/android/systemui/globalactions/GlobalActionsDialog.java

Conflicts:
	packages/SystemUI/src/com/android/systemui/globalactions/GlobalActionsDialog.java

Conflicts:
	core/res/res/values-zh-rHK/strings.xml
	packages/SystemUI/src/com/android/systemui/globalactions/GlobalActionsDialog.java

Conflicts:
	packages/SystemUI/src/com/android/systemui/globalactions/GlobalActionsDialog.java
---
 core/res/res/values/config.xml                |  1 +
 core/res/res/values/strings.xml               |  2 ++
 core/res/res/values/symbols.xml               |  1 +
 .../globalactions/GlobalActionsDialog.java    | 35 +++++++++++++++++++
 4 files changed, 39 insertions(+)

diff --git a/core/res/res/values/config.xml b/core/res/res/values/config.xml
index 89754ba11ef..8121360a779 100644
--- a/core/res/res/values/config.xml
+++ b/core/res/res/values/config.xml
@@ -2879,6 +2879,7 @@
     <string-array translatable="false" name="config_globalActionsList">
         <item>power</item>
         <item>restart</item>
+        <item>sleep</item>
         <item>lockdown</item>
         <item>logout</item>
         <item>bugreport</item>
diff --git a/core/res/res/values/strings.xml b/core/res/res/values/strings.xml
index 61c887c734a..ea7e1c98ded 100644
--- a/core/res/res/values/strings.xml
+++ b/core/res/res/values/strings.xml
@@ -519,6 +519,8 @@
     <!-- TODO: promote to separate string-->
     <string name="global_action_restart" translatable="false">@string/sim_restart_button</string>
 
+    <string name="global_action_sleep">Sleep</string>
+
     <!-- label for item that starts emergency call -->
     <string name="global_action_emergency">Emergency</string>
 
diff --git a/core/res/res/values/symbols.xml b/core/res/res/values/symbols.xml
index c5d1dc6937e..d91c9bcc4b1 100644
--- a/core/res/res/values/symbols.xml
+++ b/core/res/res/values/symbols.xml
@@ -1843,6 +1843,7 @@
   <java-symbol type="string" name="global_actions" />
   <java-symbol type="string" name="global_action_power_off" />
   <java-symbol type="string" name="global_action_restart" />
+  <java-symbol type="string" name="global_action_sleep" />
   <java-symbol type="string" name="global_actions_airplane_mode_off_status" />
   <java-symbol type="string" name="global_actions_airplane_mode_on_status" />
   <java-symbol type="string" name="global_actions_toggle_airplane_mode" />
diff --git a/packages/SystemUI/src/com/android/systemui/globalactions/GlobalActionsDialog.java b/packages/SystemUI/src/com/android/systemui/globalactions/GlobalActionsDialog.java
index 1da302a40af..780267de304 100644
--- a/packages/SystemUI/src/com/android/systemui/globalactions/GlobalActionsDialog.java
+++ b/packages/SystemUI/src/com/android/systemui/globalactions/GlobalActionsDialog.java
@@ -58,6 +58,7 @@ import android.os.Message;
 import android.os.PowerManager;
 import android.os.RemoteException;
 import android.os.ServiceManager;
+import android.os.SystemClock;
 import android.os.SystemProperties;
 import android.os.UserHandle;
 import android.os.UserManager;
@@ -141,6 +142,7 @@ public class GlobalActionsDialog implements DialogInterface.OnDismissListener,
     static public final String SYSTEM_DIALOG_REASON_DREAM = "dream";
 
     private static final String TAG = "GlobalActionsDialog";
+    private static final String GLOBAL_ACTION_KEY_SLEEP = "sleep";
 
     private static final boolean SHOW_SILENT_TOGGLE = false;
 
@@ -506,6 +508,8 @@ public class GlobalActionsDialog implements DialogInterface.OnDismissListener,
                 } else {
                     mItems.add(new RestartAction());
                 }
+            } else if (GLOBAL_ACTION_KEY_SLEEP.equals(actionKey)) {
+                mItems.add(new SleepAction());
             } else if (GLOBAL_ACTION_KEY_RESTART_RECOVERY.equals(actionKey) &&
                     PowerMenuUtils.isAdvancedRestartPossible(mContext)) {
                 mItems.add(new RestartRecoveryAction());
@@ -670,6 +674,37 @@ public class GlobalActionsDialog implements DialogInterface.OnDismissListener,
             return true;
         }
     }
+    
+    private final class SleepAction extends SinglePressAction implements LongPressAction { 
+        private SleepAction() { 
+            super(R.drawable.ic_restart, R.string.global_action_sleep); 
+        } 
+ 
+        @Override 
+        public boolean onLongPress() { 
+            PowerManager mPowerManager = (PowerManager) 
+                   mContext.getSystemService(Context.POWER_SERVICE); 
+            mPowerManager.goToSleep(SystemClock.uptimeMillis()); 
+            return true; 
+        } 
+ 
+        @Override 
+        public boolean showDuringKeyguard() { 
+            return true; 
+        } 
+ 
+        @Override 
+        public boolean showBeforeProvisioning() { 
+            return true; 
+        } 
+ 
+        @Override 
+        public void onPress() { 
+            PowerManager mPowerManager = (PowerManager) 
+                   mContext.getSystemService(Context.POWER_SERVICE); 
+            mPowerManager.goToSleep(SystemClock.uptimeMillis()); 
+        } 
+    } 
 
     private class EmergencyAffordanceAction extends EmergencyAction {
         EmergencyAffordanceAction() {
-- 
2.17.1

